Mininet installation (and general) notes for OpenBSD
----------------------------------------------------

Currently, the only option is native installation.


### Prerequisites

This Mininet port relies on the native OpenFlow switch and controller,
`switch(4)` and `switchd(8)`, respecitvely - meaning that it assumes that you
are using OpenBSD 6.1. It also makes use of `doas` instead of `sudo`.


### Installation

If it hasn't been already, install `git`:

    doas pkg_add git

Fetch the repo and checkout this branch:

    git fetch https://github.com/akoshibe/mininet.git

The install script, `install.sh`, can be used to install the Mininet core
libraries along with its dependencies. It must be generated first:

    cd mininet
    ./configure
    util/install.sh -a #or with flag -n

`install.sh -h` will give you all available options.

To test the installation:

    doas mn --test=pingall

This will create a two-host, one-switch network and ping across the hosts.
Alternatively, a `pingall` can be run from the CLI for a similar sanity check:

    doas mn
    mininet> pingall


### Removal

The Mininet core files can be uninstalled with the same install script:

    util/install.sh -u

This essentially undoes `install.sh -n` minus the package dependencies,
which is the same as `doas make uninstall`.


### Limitations/Bugs

* The nodes currently do not run a long-lived `bash`, so that take the form

      h1 <command>

  are badly broken, as are some other non-node-context CLI commands e.g.
  `iperf`. However, it is still possible to execute commands using either:

  1: The CLI's `py` command and Node.cmd():

        py h1.cmd('ping -c1 10.0.0.2')

     The node will take care of invoking the command in the correct rdomain.
     However, this must be given a command that will complete.

  2: OpenBSD's `route(8)`:

        route -T n exec <command>

     where 'n' is the rdomain ID. This value can be found by searching for the
     interface whose description contains the node's name:

        pair0: flags=8802<BROADCAST,SIMPLEX,MULTICAST> rdomain 1 mtu 1500
               lladdr fe:e1:ba:d0:fe:68
      ====>    description: "h1"
               ...

     As background: a Mininet host is comprised of a pair(4) instance in a routing
     domain.

* The number of hosts (or nodes within their own 'namespaces') is limited to 255,
  the highest ID that can be given to an rdomain.

* The mechanism currently used to connect a switch to the controller uses the
  /dev/switch* character device in a bluntly straightforward way, meaning that the
  number of switches gets limited to the number of these devices.

* Only the basic network elements (Node, Switch, Link, Controller, Host) are
  supported, i.e. there are no NAT or any resource/bandwidth-limited elements.
  Additionally, no work has been done to try to support non-native components such
  as Open vSwitch or the many controllers (NOX, POX, Ryu...)

* The `dpctl` CLI command (mapped to `switchctl`) isn't constrained to one
  switch, so it will print the same text per switch.
